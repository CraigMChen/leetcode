package ac1

import "math/rand"

// 拒绝采样
// 调用两次 rand7，所得两个数相乘
// 结果在 [1,49] 范围内，1-49 中每个数字出现的概率都是 1/49
// 取前 40 个数，将它们改为 [1,10] 范围内的数，即 x = 1 + (x-1) % 10
// 那么这 40 个 [1,10] 范围内的数，每个数的出现概率都为 1/49
// 若两次 rand7 的结果大于 40，则放弃这个结果，重新生成
// 期望时间复杂度为 O(1)，最差可达到 O(♾️)
// 空间复杂度 O(1)
// rand10 期望调用次数：
// E = 2 + 2*(9/49)^1 + 2*(9/49)^2 + 2*(9/49)^3 + ... + 2*(9/49)^n
// E = 2∑(n=0)(♾️)(9/49)^n
// E = 2.45
func rand10() int {
	for {
		row := rand7()
		col := rand7()
		n := (row-1)*7 + col
		if n <= 40 {
			return 1 + (n-1)%10
		}
	}
}

func rand7() int {
	return rand.Intn(7)
}
